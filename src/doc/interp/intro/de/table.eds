\sec	Funktionentafel

Unser nächstes Programm berechnet Quadratzahlen und Quadratwurzeln und
gibt folgende Tabelle aus:

\pipe[verbatim] esh \docfile{table_de.esh}

Das Programm ist nicht sonderlich kompliziert.
Es führt ein paar neue Dinge ein, wie Kommentare,
Variablendeklarationen, Schleifen und formatierte Ausgabe.

\include[verbatim] table_de.esh

Die Zeilen

\include[verbatim | sed -e '/^[/]/,/^[*]/!d'] table_de.esh

sind ein Kommentar, der in diesem Fall kurz erklärt, was das Programm
tut. Der EFEU-Interpreter ignoriert alle Zeichen zwischen |/*| und |*/|.
Kommentare können überall dort stehen, wo Leerzeichen, Tabulatoren
oder Zeilentrenner stehen können.

Alternativ dazu können einzeilige Kommentare auch mit
|//| und Zeilentrenner begrenzt werden. Der Zeilentrenner wird
dabei <*nicht*> mit entfernt. Diese Form wurde bei den
Variablendeklarationen gewählt.

Falls ein Kommentar am Zeilenanfang beginnt, wird auch ein unmittelbar
dem Kommentar folgender Zeilentrenner (bzw. der das Kommentar abschließende
Zeilentrenner entfernt.

Bei der Vereinbarung einer Variablen kann gleich ein Wert zugewiesen werden.
Ansonsten wird ein Defaultwert verwendet, der vom Datentyp abhängt und
bei Bedarf verändert werden kann.

Die Berechnung der Tabelle beginnt mit den Vereinbarungen

\include[verbatim | sed -e '/^int/!d'] table_de.esh

bei denen gleich den Variablen die entsprechenden Anfangswerte
zugewiesen werden.

Anschließend wird die Spaltenbeschriftung der Tabelle mit den
folgenden |printf|-Anweisungen

\include[verbatim | sed -e '/^printf/!d'] table_de.esh

ausgegeben.

Die Berechnung der einzelnen Tabellenzeilen erfolgt mit einer
|for|-Schleife:

\include[verbatim | sed -e '/^for/,\$!d'] table_de.esh

\ssec	Die |for|-Anweisung

Der Kopf der |for|-Anweisung besteht aus drei durch Strichpunkte
getrennten Anweisungen, die auch leer sein können. Der erste
Ausdruck wird vor Beginn der Verarbeitung ausgeführt. In unserem
Beispiel wird die Hilfsvariable |i| vereinbart und mit |lower|
initialisiert. Der zweite Ausdruck wird vor jedem Durchlauf
ausgewertet. Ist er falsch, wird die Verarbeitung abgebrochen.
Ansonsten wird die Schleifenanweisung in geschweiften Klammern durchgeführt.
Am Ende jedes Schleifendurchlaufs wird der dritte Ausdruck der
|for|-Anweisung ausgewertet.

Die Hilfsvariable |i| wird bereits vor der Schleifenabarbeitung
eingerichtet und bleibt auch nach der |for|-Anweisung erhalten.
Wie man sich leicht überlegen kann, hat im obigen Beispiel die
Variable nach Abarbeitung der Schleife den Wert |upper + step|.

Falls die Schleifenanweisung nur aus einer und nicht wie hier aus
mehreren Anweisungen besteht, können die geschweiften Klammern weggelassen
werden.

Die geschweiften Klammern dienen zur Zusammenfassung mehrerer
Anweisungen zu einem Anweisungsblock und können mit wenigen Ausnahmen
überall dort eingesetzt werden, wo auch einzelne Anweisungen stehen können.

\ssec	Die |while|-Anweisung

Anstelle der |for|-Anweisung kann auch eine |while|-Anweisung
für Schleifen verwendet werden. Die Anweisung <|while(<expr>)|>
ist gleichwertig mit <|for( ; <expr>; )|>.

Allgemein gilt eine Gleichwertigkeit der folgenden Anweisungen:

<|for (<a>; <b>; <c>) { <d> }|>\br
<|<a>; while (<b>) { <d>; <c> }|>

wobei es sich bei <a> und <c> um beliebige Ausdrücke, bei <b> um einen
logischen Term und bei <d> um eine beliebige Liste von Ausdrücken handelt.

\ssec	Implizite Konvertierung

Die Funktion |sqrt| benotigt einen Gleitkommawert als Argument, wird
aber mit einem Ganzzahlwert aufgerufen. Dies stellt kein Problem dar,
der Ganzzahlwert wird implizit in einen Gleitkommawert umgewandelt.

\ssec	Formatierte Ausgabe

Die Funktion |printf| dient zur formatierten Ausgabe einzelner
Variablen. Das erste Argument ist eine Zeichenkette, die gedruckt
wird und einzelne Formatelemente enthält, die bestimmen, wie
nachfolgende Werte einzufügen sind und in welcher Form sie dargestellt
werden sollen. So wird bei |%6s| eine Zeichenkette mit
der Breite 6, bei |%6d| ein Ganzzahlwert mit der Breite
6 und bei |%10.5f| ein Gleitkommawert mit der Breite 10 und 5
Nachkommastellen dargestellt.

Pro Formatelement benötigt |printf| ein entsprechendes zusätzliches Argument.
Falls der Datentyp des Wertes nicht mit der Formatanweisung
übereinstimmt, erfolgt eine implizite Konvertierung des Wertes.
Bei zuwenigen Argumenten werden stellvertretend Defaultwerte
eingesetzt. Bei zuvielen Argumente werden
die Überflüssigen einfach ignoriert.

\exercise
Vereinbaren sie |lower|, |upper| und |step| als Gleitkommavariablen.
Was, außer den Vereinbarungen, sollte noch geändert werden.

\exercise
Generieren sie eine Funktionentafel für die Winkelfunktionen
|sin|, |cos| und |tan|. Die entsprechenden Funktionen sind im
Interpreter eingebaut und erwarten den Winkel im Bogenmaß.
Zur Umrechnung steht die Konstante |M_PI| zur verfügung.

