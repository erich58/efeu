# :*:rules for copying files
# :de:Regeln zum Kopieren von Dateien
#
# $Synopsis
# <=[=> include $1 <=]=>
#
# $Copyright (C) 2004 Erich Frühstück
# This file is part of EFEU.
# 
# EFEU is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
# 
# EFEU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with EFEU; see the file COPYING.
# If not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

test $_file_smh && return
_file_smh=1

include dir.smh

# $alias
# $pconfig !
# n |
#	:*:clears options passed to |mf_rule|.
#	:de:Löscht die Optionen für |mf_rule|.
# i | A:name | C:name |
#	:*:These flages are passed to |mf_rule|. They determines
#	the names of the phony targets for creating/cleaning.
#	The |-a| flag of |mf_rule| is predefined.
#	See \mref\{rule.smh(7)\} for details.
#	:de:Diese Flags werden an |mf_rule| weitergereicht. Sie
#	bestimmen die Namen der Scheinziele zum Generieren/Aufräumen.
#	Das |-a| Flag von |mf_rule| ist vordefiniert.
#	Vergleiche dazu \mref\{rule.smh(7)\}.
# d:dep |
#	:*:expands depend list by <dep>.
#	:de:ergänzt die Abhängigkeiten um <dep>.
# m:mode |
#	:*:set the permissions of target to the given <mode>.
#	:de:setzt die Zugriffsrechte für das Ziel entsprechend von <mode>.
#	Vergleiche dazu \mref\{chmod(1)\}.
# /%*=*/%name=repl |
#	:*:substituten rule, passed to |mf_rule|.
#	See \mref\{rule.smh(7)\} for details.
#	:de:definiert eine Ersetzungsregel, die an |mf_rule| weitergereicht
#	wird.
#	Vergleiche dazu \mref\{rule.smh(7)\}.
# x |
#	:*:is an abbreviation for |-m a+x|.
#	:de:ist eine Abkürzung für |-m a+x|.
# :tg |
#	:*:is the name of the target file.
#	:de:Ist der Name der Zieldatei
# :src |
#	:*:is the name of the source file.
#	:de:Ist der Name der Quelldatei.
# ::cmd |
#	:*:specifies a command to create the target, see below.
#	:de:definiert einen Befehl zur Erzeugung der Zieldatei, siehe weiter
#	unten.
# ::args(s) |
#	:*:specifies additional arguments/filters to <cmd>, see below.
#	:de:definiert zusätzliche Argumente/Filter zur Erzeugung der Zieldatei,
#	siehe weiter unten.
# !
# :*:
# The function $! copies the file <src> to <tg>. The following arguments
# are accepted:
# :de:
# Die Funktion $! kopiert die Datei <src> nach <tg>. Die folgenden
# Argumente werden akzeptiert:
#
# @arglist
#
# :*:
# Normally |cp| is used to create the target file. If <cmd> is given,
# the following command line is used to create the target:
#	<cmd> <src> <arg(s)> |> $@|
# :de:
# Im Normalfall wird |cp| zur Installation der Datei verwendet, bei Verwendung
# von <cmd> kann aber ein beliebiger Befehl zur Erzeugung der
# Zieldatei verwendet werden. Die generierte Befehlszeile hat die Form:
#	<cmd> <src> <arg(s)> |> $@|

mf_file ()
{
	_file_flg="-a"
	_file_dep=
	_file_mode=

	while [ -n "$1" ]
	do
		case "$1" in
		-n)	_file_flg=""; shift 1;;
		-i)	_file_flg="$_file_flg $1"; shift 1;;
		-[AC])	_file_flg="$_file_flg $1 $2"; shift 2;;
		-[AC]*)	_file_flg="$_file_flg $1"; shift 1;;
		%*=*)	_file_flg="$_file_flg $1"; shift 1;;
		-d)	_file_dep="$_file_dep $2"; shift 2;;
		-x)	_file_mode="a+x"; shift 1;;
		-m)	_file_mode="$2"; shift 2;;
		-m*)	_file_mode=`expr "$1" : '..\(.*\)'`; shift 1;;
		-*)	shmkmf_invop mf_file "$1";;
		*)	break;;
		esac
	done

	_file_tg="$1"
	_file_src="$2"
	shift 2

	if [ "$#" -gt 0 ]; then
		_file_cmd="$1 $_file_src"
		shift;
		_file_cmd="$_file_cmd $* >"
	else
		_file_cmd="cp -f $_file_src"
	fi

	if [ -n "$_file_mode" ]; then
		_file_pre="rm -f \$@; "
		_file_post="; chmod $_file_mode \$@"
	else
		_file_pre=
		_file_post=
	fi

	mf_rule $_file_flg "$_file_tg" "$_file_src$_file_dep" \
		"$_file_pre$_file_cmd \$@$_file_post"
}

# $Description
# :*:
# If permissions are defined by either |-m| or |-x|, the target is removed
# before creating the new version. This ensures, that the target file
# belongs the user and a following |chmod| should not fail.
# This supports building environments, where more than one user (e.g.
# all members of a group) are allowed to update the target file.
# :de:
# Falls Zugriffsrechte für das Ziel vorgegeben wurden, wird das Ziel
# vor einer Neugenerierung entfernt. Damit wird sichergestellt, dass das
# Ziel dem user gehört und ein nachfolgendes |chmod| nicht fehlschlägt.
# Dies unterstützt Bildungsumgebungen, wo mehr als ein Anwender (z.B.
# alle Mitglieder einer Gruppe) das Recht zur Erneuerung des Ziels
# haben.
#
# $Examples
# \config shmkmf
# :*:
# The following lines
# \shmkmf[-x] creates the output
# mf_file '\$(LIB)/foo.def' foo.def
# mf_file -x '\$(BIN)/foo' foo.sh
# mf_file '\$(DATA)/foo.dat' "a.dat b.dat c.dat" "cat" "| sort"
# \end
# //| Kompensation des Pipe-Symbols für langpar
# :de:
# Die folgende Zeilen
# \config shmkmf
# \shmkmf[-x] generieren die Ausgabe
# mf_file '\$(LIB)/foo.def' foo.def
# mf_file -x '\$(BIN)/foo' foo.sh
# mf_file '\$(DATA)/foo.dat' "a.dat b.dat c.dat" "cat" "| sort"
# \end
# //| Kompensation des Pipe-Symbols für langpar

# $Note
# :*:The header |$1| is preloaded by |shmkmf|.
# :de:Die Headerdatei |$1| wird bereits von |shmkmf| geladen.

# $SeeAlso
# \mref{shmkmf(1)}, 
# \mref{rule.smh(7)}.
