# :*:rules for updating files
# :de:Regeln zur Aktualisierung von Dateien
#
# $Synopsis
# <=[=> include $1 <=]=>
#
# $Copyright (C) 2004 Erich Frühstück
# This file is part of EFEU.
# 
# EFEU is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
# 
# EFEU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with EFEU; see the file COPYING.
# If not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

test $_update_smh && return
_update_smh=1

include dir.smh

# $pconfig !
# n |
#	:*:clears options passed to |mf_rule|.
#	:de:Löscht die Optionen für |mf_rule|.
# i | A:name | C:name |
#	:*:These flages are passed to |mf_rule|. They determines
#	the names of the phony targets for creating/cleaning.
#	The |-a| flag of |mf_rule| is predefined.
#	See \mref\{rule.smh(7)\} for details.
#	:de:Diese Flags werden an |mf_rule| weitergereicht. Sie
#	bestimmen die Namen der Scheinziele zum Generieren/Aufräumen.
#	Das |-a| Flag von |mf_rule| ist vordefiniert.
#	Vergleiche dazu \mref\{rule.smh(7)\}.
# v |
#	:*:show commands on updating a target.
#	:de:Kommandos beim aktualisieren eines Zieles ausgeben.
# m:mode |
#	:*:set the permissions of target to the given <mode>.
#	:de:setzt die Zugriffsrechte für das Ziel entsprechend von <mode>.
# /%*=*/%name=repl |
#	:*:substituten rule, passed to |mf_rule|.
#	See \mref\{rule.smh(7)\} for details.
#	:de:definiert eine Ersetzungsregel, die an |mf_rule| weitergereicht
#	wird.
#	Vergleiche dazu \mref\{rule.smh(7)\}.
# x |
#	:*:is an abbreviation for |-m a+x|.
#	:de:ist eine Abkürzung für |-m a+x|.
# :tg |
#	:*:is the name of the target file.
#	:de:Ist der Name der Zieldatei
# :cmd |
#	:*:specifies the command to create the target, see below.
#	:de:definiert den Befehl zur Erzeugung der Zieldatei, siehe weiter
#	unten.
# ::args(s) |
#	:*:specifies additional arguments/filters to <cmd>, see below.
#	:de:definiert zusätzliche Argumente/Filter zur Erzeugung der Zieldatei,
#	siehe weiter unten.
# !
# :*:
# The function $! creates a rule for updating <tg> with the command <cmd>
# and the given arguments. On every execution,
# a temporary version of the target is created and compared with
# the actual version. If something has changed, the target would
# be overwritten. Otherwise the Target is untouched. See example below.
# The following arguments are accepted:
# :de:
# Die Funktion $! erzeugt eine Regel zur Aktualisierung der Datei <tg> mit dem
# Kommando <cmd> und den angegebenen Argumenten.
# Das Ziel wird dabei temporär erstellt und mit der aktuellen
# Version verglichen. Bei einer Veränderung wird die Zieldatei
# überschrieben. Vergleiche dazu untenstehendes Beispiel.
# Die folgenden Argumente werden akzeptiert:
#
# @arglist

mf_update ()
{
	_update_echo="@"
	_update_flg="-a"
	_update_mode=

	while [ -n "$1" ]
	do
		case "$1" in
		-n)	_update_flg=""; shift 1;;
		-i)	_update_flg="$_update_flg $1"; shift 1;;
		-[AC])	_update_flg="$_update_flg $1 $2"; shift 2;;
		-[AC]*)	_update_flg="$_update_flg $1"; shift 1;;
		%*=*)	_update_flg="$_update_flg $1"; shift 1;;
		-v)	_update_echo=""; shift 1;;
		-x)	_update_mode="a+x"; shift 1;;
		-m)	_update_mode="$2"; shift 2;;
		-m*)	_update_mode=`expr "$1" : '..\(.*\)'`; shift 1;;
		-*)	shmkmf_invop mf_file "$1";;
		*)	break;;
		esac
	done

	test "$#" -gt 1 || shmkmf_warg mf_update
	_update_tg="$1"
	shift 1

	if [ -n "$_update_mode" ]; then
		_update_post="; chmod $_update_mode \$@"
	else
		_update_post=
	fi

	mf_rule -d $_update_flg "$_update_tg" "" \
		"$_update_echo$* > \$@~" \
		"${_update_echo}if cmp -s \$@~ \$@; then \\" \
		"	rm -f \$@~; \\" \
		"else \\" \
		"	mv -f \$@~ \$@$_update_post; \\" \
		"fi"
}

# $Examples
# \config shmkmf
# :*:
# The following lines
# \shmkmf[-x] creates the output
# mf_update file.list ls -lR
# \end
# :de:
# Die folgende Zeilen
# \shmkmf[-x] generieren die Ausgabe
# mf_update file.list ls -lR
# \end

# $Note
# :*:The header |$1| is preloaded by |shmkmf|.
# :de:Die Headerdatei |$1| wird bereits von |shmkmf| geladen.

# $SeeAlso
# \mref{shmkmf(1)}, 
# \mref{file.smh(7)}.
# \mref{rule.smh(7)}.
