# :*:create master makefile for subprojects
# :de:Haupmakefile für Teilprojekte generieren
#
# $Synopsis
# include $1
#
# $Copyright (C) 2008 Erich Frühstück
# This file is part of EFEU.
# 
# EFEU is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
# 
# EFEU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with EFEU; see the file COPYING.
# If not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

test $_submake_smh && return
_submake_smh=1

include rule.smh
include update.smh

# Determine list command

x=`dirname $0`

if [ -x $x/shmkmf-list ]; then
	_submake_list="$x/shmkmf-list"
elif [ -f $x/shmkmf-config.sh ]; then
	_submake_list="sh $x/shmkmf-list.sh"
else
	_submake_list=shmkmf-list
fi

submake_build="all"
submake_clean="clean"

# $alias
# $pconfig !
# u|
#	:*:create primary target with usage output
#	:de:generiert Verwendungsinformationen als Basisziel.
# b:name|
#	:*:expands the list of build targets with <name>
#	:de:erweitert die Liste der Generierungsziele mit <name>
# c:name|
#	:*:expands the list of clean targets with <name>
#	:de:erweitert die Liste der Aufräumziele mit <name>
# i|
#	:*:is a shortcut for |-b install -c uninstall|
#	:de: ist eine Kurzform für |-b install -c uninstall|
# p|
#	:*:is a shortcut for |-c purge|
#	:de: ist eine Kurzform für |-c purge|
# s:name|
#	:*:search for subdirectories in <name>
#	:de:Verarbeite Unterverzeichnisse in <name>
# w:name|
#	:*:use <name> as work directory
#	:de:Verwende <name> als Arbeitsverzeichnis
# !
# :de:
# Die Funktion |$1| generiert für jedes Unterverzeichnis
# im Quellverzeichnis ein korrespondierendes Verzeichnis im Aufbauverzeichnis
# Dabei werden nur jene Verzeichnisse berücksichtigt, die eine
# |Config.make| Datei enthalten. Abhängigkeiten zwischen den Verzeichnissen
# werden über das Schlüsselwort |Depends:| im Kommentartext gesteuert.
# Nach diesem Schlüsselwört folgt eine Liste aller Verzeichnisse, die zuvor
# gebaut werden müssen. Die Abhängigkeiten gelten nur für die
# Genererierungsziele und nicht für die Aufräumziele.
#
# :de:
# Quell- und Aufbauverzeichnis dürfen zusammenfallen. Die Makefiles werden
# dann jeweils im gleichen Verzeichnis wie die zugehörigen |Config.make|
# Dateien gebaut.
# Zur Kontrolle der Zusammensetzung der Unterverzeichnisse wird die Datei
# |ProjectList| mit einer Liste aller Quellverzeichnisse im Aufbauverzeichnis
# angelegt und bei jedem Aufruf von |make| auf Veränderung geprüft.

submake ()
{(
	SRC=`cd $SRC; pwd`
	TOP=`cd $TOP; pwd`
	tpl=$TMP/.submake.tpl
	usage=
	build="$submake_build"
	clean="$submake_clean"
	work=""
	src="$SRC"
	printf "%%::" > $tpl

	while [ -n "$1" ]
	do
		case "$1" in
		-u)	usage=1; shift 1;;
		-b)	build="$build $2"; shift 2;;
		-c)	clean="$clean $2"; shift 2;;
		-i)	build="$build install";
			clean="$clean uninstall";
			shift 1;;
		-p)	clean="$clean purge"; shift 1;;
		-w)	work="$2"; shift 2;;
		-s)	src="$SRC/$2"; shift 2;;
		--)	shift; break;;
		-*)	shmkmf_invop mf_rule "$1";;
		*)	break;;
		esac
	done

	test "$#" -eq 0 || shmkmf_warg submake

	test "$usage" && mf_rule -d usage "" \
		"@echo 'usage: make <target> | <project>[.target]'"

	$_submake_list $SRC > ProjectList
	mf_update -w "$work" ProjectList $_submake_list $SRC
	test -n "$work" && work=$work/
	add_depend ${work}ProjectList

	for prj in `cat ProjectList`
	do
		dir=$SRC/$prj
		cfg=$dir/Config.make

		printf "\n# %s\n" "$cfg"
		sed -n -e '/^$/q' -e '/^#.*Depends:/d' -e '/^#/p' $cfg
		add_depend $cfg

		name=`basename $prj`
		wdir=$work$name
		printf " %s.%%" $name >> $tpl

		test "$usage" && mf_rule -r -d usage "" <<!
@printf '%s' $name
@(grep '^#' $cfg || @/
echo '# <no description>') | sed -e 's/^#[ 	]*/	/'
!
		mf_rule $wdir/Makefile $cfg "test -d $wdir || mkdir -p $wdir" \
			"cd $wdir; $shmkmf -t $TOP $cfg"

		if [ -f $dir/Depends ]
		then
			add_depend $dir/Depends

			for dep in `sed -e 's/#.*//' $dir/Depends`
			do
				mf_rule $wdir/Makefile $dep/Makefile

				for tg in $build
				do
					printf "%s:: %s\n" \
						"$name.$tg" "$dep.$tg"
				done
			done
		fi

		for dep in `grep '^#.*Depends:' $cfg | sed -e 's/.*Depends://'`
		do
			printf "\n"

			for tg in $build
			do
				printf "%s:: %s\n" "$name.$tg" "$dep.$tg"
			done
		done

		printf "\n%s:: %s\n" "$name" "$wdir/Makefile"
		printf "%s::\n\t%s\n" "$name" "cd $wdir; make"

		for tg in $build $clean
		do
			printf "%s:: %s\n\t%s\n" "$name.$tg" "$wdir/Makefile" \
				"cd $wdir; make $tg"
		done
	done

	printf "\n" >> $tpl
	echo

	for tg in $build
	do
		sed -e "s/%/$tg/g" $tpl
	done

	for tg in $clean
	do
		postpone sed -e "s/%/$tg/g" $tpl
	done
)}

# $SeeAlso
# \mref{shmkmf(1)},
# \mref{efeuprj.smh(7)},
