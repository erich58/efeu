\sec	\label{var}\index{Variablenselektion}

\index[Filter |var|]
Der Filter \index{|var|} dient zur Auswahl und Ableitung einzelner
Variablen (Attribute) aus einem Datensatz. Die Variablen können
beliebig zu Teilstrukturen zusammengefasst werden. Zusätzlich zu den
verfügbaren Variablen des Basisdatensatzes können beliebige Ausdrücke
zur Konstruktion neuer Variablen verwendet werden.

\ssec	Syntax

Die allgemeine Syntax des Filters lautet:

var[|[r]|]|=|<varlist>

Falls keine Variablenliste <varlist> angegeben wird, werden alle
verfügbaren Variablen aufgelistet.

Besteht die durch <varlist> definierte Datenstruktur nur aus einer
Komponente, und wurde das Flag |r| (reduce) angegeben oder lautet der
Name dieser Komponente |this|, wird der Datentyp durch den Typ der
Komponente ersetzt.

Die Variablenliste <varlist> besteht aus einer durch Komma getrennten
Liste von Ausdrücken der Form:

\[[<type>] <name>|=|]<expr>

Falls kein Datentyp <type> angegeben wurde, wird dieser durch den
Typ des Ergebnisses bei der Auswertung von <expr> bestimmt. Falls für <expr>
eine Komponente des Basisdatensatzes angegeben wurde, kann <name>
weggelassen werden. Es wird der Name der letzten Komponente in <expr>
verwendet.

Beispiel: Der Aufruf
---- eval
{
str cmd = "edb -f 'var=num,bdat.year,date=str(bdat,\"%Y-%m-%d\"),count=1.' \
data.edb";
input("verbatim", cmd);
input(NULL, "liefert");
input("verbatim", popen(cmd, "r"));
}
----
/pattern

\ssec	Strukturierung

Mit dem speziellen Ausdruck

<name>|={|<varlist>|}|

wird eine Strukturvariable <name> eingerichtet, deren Komponenten
wiederum durch die Variablenliste <varlist> nach obigen Regeln bestimmt
werden. Es sind beliebige Verschachtelungen zulässig.

Beispiel: Der Aufruf
---- eval
{
str cmd = "edb -f \
'var=num,pers={first_name,family_name,var={birth_year,gender}}' \
pers.edb";
input("verbatim", cmd);
input(NULL, "liefert");
input("verbatim", popen(cmd, "r"));
}
----

\ssec	Musterselektion

Bei der Zusammenstellung von Variablen können Komponenten des
Basisdatensatzes auch über einen Mustervergleich ausgewählt werden.
Die Vorgabe eines Datentyps oder eines Variablennamens ist hier nicht
zulässig. Bei Namenskonflikten werden selektierte Variablen ignoriert.

Ein Ausdruck zur Mustererkennung hat den folgenden Aufbau:

<pexpr>\n
<base>|.|<pexpr>

Dabei ist <pexpr> ein Musterausdruck und <base> eine Basiskomponente
einer Datenstruktur. Ein Musterausdruck <pexpr> wiederum besteht
entweder aus einem einzelnen Stern (|*|) oder einer Musterliste in
eckigen Klammern. Die einzelnen Elemente in der Musterliste werden durch
weiße Zeichen oder Kommas getrennt.

Einem Element kann ein |+| für Auswahl oder ein |-| für
Zurückweisung vorangestellt werden. Keine Angabe wirkt wie
ein |+|. Falls das erste Element der Liste eine Zurückweisung ist,
gelten zu Beginn alle Variablen als ausgewählt.

Bei der Auswahl werden die Variablennamen der Reihe nach mit den
Elementen der Musterliste verglichen und bei Übereinstimmung
entsprechend der Selektionswirkung ausgewählt oder zurückgewiesen.

Es gibt drei verschiedene Auswahlformen:

[<pattern>]
	definiert einen einfachen Mustervergleich.
	Es gelten folgende Metazeichen:
	[|*|]
		beliebige Zeichenfolge
	[|?|]
		beliebiges Zeichen
	[|[|<list>|]|]
		Liste <list> von Zeichen
[|#|<ug>[|:|<og>]]
	dient zur positionellen Auswahl.
	Die Variablen der Basiskomponente werden beginnend
	mit 1 durchnummeriert. Eine Variable wird ausgewählt/zurückgewiesen,
	wenn ihre Position im Intervall |[| <ug>, <og> |]| liegt. Falls
	|:|<og> nicht angegeben wurde, wird der Wert von <ug> verwendet.
	Negative Werte für <og> und <ug> werden relativ zur letzten
	Variablen bestimmt. Fehlende Werte stehen für einen offenen Bereich.
	So selektiert z.B. |#-3:| die letzten drei Variablen.
[|/|<regex>|/|[|i|]]
	verwendet den regulären Ausdruck <regex> zur Auswahl. Falls das
	optionale Flag |i| angegeben wurde, erfolgt keine
	Unterscheidung bezüglich der Groß- und Kleinschreibung. Es
	wird die <"POSIX Extended Regular Expression"> Syntax
	(Vergleiche dazu \mref{regex(7)}) verwendet.

Beispiel: Der Aufruf
---- eval
{
str cmd = "edb -f \
'var=num,[-*name],*' \
pers.edb";
input("verbatim", cmd);
input(NULL, "liefert");
input("verbatim", popen(cmd, "r"));
}
----

Die Variablen wurden im Beispiel folgend bestimmt:
*	Auswahl von |num|,
*	alle Variablen, die nicht auf |name| enden,
*	alle restlichen Variablen.

Bei einem Mustervergleich können nur Komponenten einer Datenstruktur
und keine abgeleiteten Variablen selektiert werden. Beispiel: Der
Datentyp |Date| ist ein Ganzzahlwert (Kalenderindex) ohne Komponenten,
kennt aber eine Reihe von abgeleiteten Variablen (year, month, ...), die
wie Komponenten angesprochen werden können. So kann zwar in der
Beispieldatei |data.edb| das Zugangsjahr mit |bdat.year| ausgewählt
werden, die Musterauswahl |bdat.[year]| schlägt aber fehl.

\ssec	Klassifikationen

Im Kontext der Konstruktion von Datenwürfeln spielen Klassifikationen
(Variablen mit Aufzähltyp) eine wichtige Rolle.
Mit dem speziellen Ausdruck

<name>|=|<expr>|{|<cdef>|}|

wird eine Klassifikation des Ausdrucks <expr> durchgeführt.
Der Ausdruck <expr> darf keine Muster&-selektion enthalten.
Klassifikationsdefinitionen können geschachtelt werden.

Klassifikationsdefinitionen hängen vom Datentyp des Ausdrucks <expr>
ab. Die allgemeine Syntax für Klassifikationsdefinitionen ist:

<name>|[|<opt>|]=|<arg>

Durch Angabe eines |?| können die verfügbaren
Klassifikationsdefinitionen zu einer Variablen aufgelistet werden.

Klassifikationsdefinitionen sind als Datentyp-Parameter (Abschnitt \ref{par},
Seite \pref{par}) zur Parameterklasse |class| definiert.

<*Anmerkung:*> Das Konzept der Klassifikationsdefinitionen ist abgeschlossen,
konkrete Klassifikationsdefinitionen müssen jedoch erst entwickelt
werden. Derzeit steht nur für den externen Datentyp |AGE99| (Ein Datentyp für
das Alter mit Wertebereich 0 - 99) eine Klassifikationsdefinition zur
Verfügung.

In Vorbereitung:
*	Zerlegung des Wertebereichs einer Variablen
	mit beliebigem Datentyp über Testausdrücke.
*	Ableitung einer Teilklassifikation aus einem Aufzähltyp durch Auswahl
	und Zusammenfassungen von Labels.
