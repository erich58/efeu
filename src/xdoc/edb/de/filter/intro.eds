\sec 	Grundlagen

Sämtliche Transformationen von EDB-Datenfiles können über
\index{Filter} implementiert werden.

Datenbankfilter werden durch Aufsetzen einer EDB-Datenschnittstelle
auf eine andere EDB-Datenschnittstelle realisiert. Die Daten werden
mit einer speziellen Lesefunktion aus der Basisdatenschnittstelle
gelesen und verarbeitet.

Grundsätzlich lesen Datenbankfilter <n> Datensätze eines Typs und
liefern <k> Datensätze eines anderen Typs. Die resultierenden Datensätze
werden immer einzeln über die Datenschnittstelle abgerufen und müssen
bei Bedarf vom Filter zwischengespeichert werden. Beim Sortieren
eines Datenfiles muss z.B. der gesamte Datenbestand zwischengespeichert
werden.

Filter können beliebig geschachtelt werden. Es besteht die
Möglichkeit, zusätzliche Daten über einen Filter einzuspielen.
Über diesen Weg kann z.B. eine Datenbankverknüpfung als Filter
implementiert werden.

\ssec	Syntax

\index[Filtersyntax]
Filter können parametrisiert werden. Die allgemeine Syntax ist
	<name>|[|<opt>|]=|<arg>
Die Parameter <opt> und <arg> können vom Filter <name> beliebig
verwendet werden. In der Regel werden notwendige Parameter über
<arg> und zusätzliche Parameter über <opt> übergeben. Falls <opt>
nicht angegeben wird, entfallen auch die eckigen Klammern.

Bei der Implementierung der Filter wird die \index{Filterdefinition} aus
einer Zeichenkette ermittelt. Mehrere Filter können dabei angegeben
werden. Die einzelnen Definitionen werden durch beliebige, weiße
Zeichen getrennt. Innerhalb von eckigen, runden oder geschwungenen
Klammern werden weiße Zeichen nicht als Trennzeichen behandelt.

Stehen nur Teile der Filterdefinition in geschwungenen Klammern, sind
sie Teil der Filterdefinition. Wird die gesamte Filterdefinition in
geschwungene Klammern gesetzt, werden diese bei der Analyse entfernt.

\index[Informationsabfrage zu Datenbankfiltern]
Wird ein |?| als Filtername angegeben, werden alle verfügbaren Filter
mit einer Kurzbeschreibung ausgegeben.
Wird als Argument eines Filters ein |?| angegeben, wird eine
Kurzbeschreibung des Filters ausgegeben.

\ssec	\label{fscript}\index{Filterskripts}

\index[Filter |script|]
Es besteht die Möglichkeit, Filterdefinitionen aus einem Skript zu
laden. Grundsätzlich gelten die gleichen Regeln wie bei der
Definition als Zeichenkette, das Skript wird aber vorher noch mit
einem \index{Preprozessor} überarbeitet. Dabei
werden Kommentare im C-Stil (ISO99) und Preprozessordirektiven
abgearbeitet.
\index{Lange Zeilen} können mithilfe eines \index{Gegenschrägstrich}s
zerlegt werden (Die Sequenz Gegenschrägstrich Zeilenvorschub wird aus
der Eingabe gelöscht).

Zusätzlich werden Leerzeichen vor einem Zeilenvorschub entfernt und
eingerückte Zeilen gelten als \index{Fortsetzungszeilen} (Ein Zeilenvorschub
gefolgt von Leerzeichen oder Tabulatoren wird entfernt).
Damit lassen sich Skripts übersichtlicher schreiben.

\index[|script|]
Die Implementation erfolgt über den Filter |script=|<path>, wobei
<path> der Pfadname des Filterskripts ist. Der Filter |script| ist ein
Dummy-Filter, der nur dazu dient, die im Skript definierten Filter zu
aktivieren.

\ssec	\label{cmp}\index{Vergleichsdefinition}

Sollen EDB-Datenfiles sortiert, gemischt oder verknüpft werden,
müssen einzelne Datensätze miteinander verglichen werden.
Die dafür benötigte  Vergleichsdefinition wird durch eine Liste der
Komponenten der Datenstruktur festgelegt. Die Sortierung erfolgt in
der Reihenfolge der Angaben.

Jeder Komponente kann ein |+| für aufsteigend oder ein |-| für
abstegend vorgangestellt werden. Ohne Angabe einer Richtungsangabe wird
aufsteigend sortiert. Danach folgt optional der Name einer
Vergeichsfunktion. Dieser Name wird mit einem |:| abgeschlossen.
Ohne Angabe wird die Funktion |cmp| verwendet.

Wird keine Komponentenliste angegeben, werden die einzelnen Datensätze
binär verglichen. Ist die Komponentenliste leer, wird die
\index{Vergleichsfunktion} des Datentyps des EFEU-Datenfiles verwendet.

Bei Vektorkomponenten besteht die Möglichkeit, entweder direkt den
gewünschten Index anzugeben, oder einen \index{Teilvergleich} für die
Vektorkomponenten durchzuführen. Falls kein Index der Form |[|<num>|]|
angegeben ist, wird automatisch der Teilvergleich gewählt. Bei
Feldern mit variabler Länge ist nur der Teilvergleich zulässig.

Ein Teilvergleich wird auch für einen mit |(| ... |)| geklammerten
\index{Teilbereich} gestartet. Innerhalb der Klammerung können mehrere
Komponenten angegeben werden.

Eine vorgegebene Vergleichsfunktion wird nicht in den Teilbereich
übernommen, sie muss innerhalb des Teilbereichs neu angegeben werden.
