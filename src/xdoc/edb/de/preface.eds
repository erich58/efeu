/*	Introduction to edb manual, german version

$Copyright (C) 2005 Erich Frühstück
This file is part of EFEU.

EFEU is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

EFEU is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with EFEU; see the file COPYING.
If not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
*/

\preface

Dieses Handbuch beschreibt das Arbeiten mit EDB-Datenfiles und der
EDB-Datenschnittstelle.

Die EDB-Datenschnittstelle bildet zusammen mit den EDB-Datenfiles eine
Art Datenbanksystem, das Tabellen als Einheit betrachtet. Dabei wird
die Verwaltung an das Betriebssystem delegiert. Im EDB-Konzept
sind Tabellen einfach Dateien mit einem speziellen Datenformat.

Die Verwaltung wird damit wesentlich vereinfacht und kann durch
gewöhnliche Funktionen zur Dateimanipulation ersetzt werden. Was
bleibt, sind Funktionen zur Selektion, Transformation und Verknüpfung
von Datenbanken. Diese bilden den Kern der Datenschnittstelle.

Durch die Verlegung der Verwaltung auf die Dateiebene lassen sich
allgemeine Werkzeuge zur Datengenerierung einsetzen.
So kann z.B. der Aufbau von Tabellen aus Basisdateien über |make| gesteuert
werden. Ändert sich eine Tabelle, werden nur die davon abhängigen
Tabellen und Auswertungen neu zusammengestellt und generiert.

Der wesentliche Unterschied zu einem herkömmlichen Datenbanksystem ist,
dass eine Tabelle nicht direkt geändert werden kann, sondern jede
Form der Manipulation, sei es auch nur ein einzelner Datensatz, in
einer neuen Tabelle (ist gleich Datei) resultiert. Nach Abschluß der
Verarbeitung kann die ursprüngliche Tabelle durch die neue Version
ersetzt werden. Transaktionen betreffen also immer die gesamte
Tabelle.

EDB ersetzt kein Datenbanksystem, sondern ergänzt es in den Bereichen
Auswertung, Data Warehouse und Data Mining.

EDB ist nicht auf relationale Tabellen beschränkt.
Da Transaktionen grundsätzlich immer die
gesamte Tabelle betreffen, entfällt die Notwendigkeit der
Normalisierung zur Vermeidung von Update-Anomalien.
Durch die Verwendung nicht normalisierter Datenbanken läßt sich eine
schnelle Verarbeitung erzielen.

Bei der Datenmodellierung müssen keine Restriktionen des
Relationenmodells berücksichtigt werden. Die Tabellenstrukturen
können ganz auf die Problemstellung zugeschnitten werden.

Auf eine Datenschnittstelle können Transformationen aufgesetzt
werden, die wieder als Datenschnittstellen sichtbar werden.
Im EDB-Datenkonzept sind physikalische und virtuelle Tabellen
gleichwertig.

EDB setzt auf den EFEU-Interpreter auf. Es können beliebige Datentypen
des Interpreters verwendet werden. Neue Datentypen lassen sich innerhalb
des Interpreters oder durch Einbinden von C-Bibliotheken erweitern.
Vektoren mit fixer und variabler Länge werden unterstützt.
Auf die Datenschnittstelle kann vom Interpreter aus zugegriffen werden.

Da es sich beim EFEU-Interpreter um eine objektorientierte
Skriptsprache handelt, stehen OO-Konzepte zur Datenmodellierung zur
Verfügung. Insbesonders Kapselung und Vererbung weisen sich dabei als
besonders nützlich.

EDB ist ein Datenfluss- und Transformationskonzept. Am Anfang steht
eine Datenquelle, gefolgt von einzelnen Datentransformationen (Filter)
und schlussendlich endet die Verarbeitung bei einer Datensenke.
Der Datenstrom kann beliebig aufgespalten werden. Verschiedene Datenströme
können zusammengeführt werden.
Alle Zwischenstufen in einer Filterkette (Datenpipeline) stellen sich
als EDB-Schnittstellen dar.

Datenquellen sind sehr allgemein. Neben dem Lesen eines EDB-Datenfiles
werden über spezielle Lesefunktionen auch beliebige Fremdformate oder
Ausgaben von anderen Prozessen (z.B. SQL-Abfragen aus einem
Datenbanksystem) unterstützt.

Auch Datensenken sind sehr allgemein. Neben dem Speichern als
EDB-Datenfile können beliebige Exportformate erzeugt und bei
Bedarf direkt an andere Prozesse weitergereicht werden.

Eine spezielle Form einer Datensenke ist die Umwandlung von
Aggregatdateien (Tabellen, die nur Klassifikationen und aggregierbare
Variablen enthalten) in einen Datenwürfel.

Datenwürfel sind elementare Datenobjekte des EFEU-Interpreters.
Neben den üblichen Transaktionen für Datenwürfeln stehen auch eine
Reihe von, auf beliebige Dimensionen verallgemeinerte, Matrixoperationen
zur Verfügung (z.B. Matrixmultiplikation über gemeinsame Achsen von
Datenwürfeln).

Im ersten Kapitel dieser Dokumentation werden die elementaren Konzepte kurz
vorgestellt.
In den nachfolgenden Kapiteln werden diese dann detaillierter
beschrieben.

Der Anhang enthält Handbuchseiten zu einzelnen Kommandos.
Diese Handbucheinträge können auch direkt durch Eingabe des
entsprechenden Kommandos und der Option |--help| interaktiv abgerufen
werden.
Dabei wird insbesonders auf den Handbucheintrag |esh|
verwiesen, der einen kurzen Überblick über den EFEU-Interpreter gibt.

Der Umfang der Dokumentation hängt von den lokal installierten
EFEU-Projekten und der Dokumentsprache ab. Derzeit ist die deutsche
Version am ausführlichsten.

	Erich Frühstück\br
	Wördern, \thedate
