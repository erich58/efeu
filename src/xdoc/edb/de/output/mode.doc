\sec	Ausgabemodi

Der Ausgabemodus determiniert im wesentlichen die Ausgabe. Er enthält
eine Ausgabefunktion, die für jeden Datensatz aufgerufen wird. Wobei
hier Ausgabe nicht unbedingt das Schreiben von Daten in eine Datei
bedeuten muss, es können z.B. auch Daten in einer \index{Datenmatrix}
aggregiert werden. Vergleiche dazu \ref{md}, Seite \pref{md}.

\ssec	Ausgabe als EDB-Datenfile

Es gibt drei verschiedene Ausgabeformate, die im Regelfall wiederum
als EDB-Datenfiles gelesen werden können. Diese entsprechen auch den
gleichnamigen Standardlesefunktionen für EDB-Datenfiles.

Allen Ausgabemodi ist gemeinsam, dass sie einen standardisierten
EDB-Datenfilekopf mit dem Datentyp des EDB-Datenfiles generieren.
Aus dem Datentyp werden eventuell benötigte Headerzeilen extrahiert.
Der Kopteil schließt mit einer \index{|@data|-Anweisung} ab, die als
Parameter die zur Ausgabe passende, gleichnamige Lesedefinition enthält.

[\index{|plain|}]
	Die Daten werden so ausgegeben, dass sie als \index{Term} des
	EFEU-Interpreters wieder gelesen werden können. Die einzelnen Terme
	sind durch einen Strichpunkt getrennt. Formatierungsvorgaben
	für Zahlenwerte werden nicht berücksichtigt. Die Ausgabe ist
	auf eine möglichst exakte Wertrepräsentation abgestimmt.
[\index{|l|}, \index{|label|}]
	Die Daten werden in eine Zeichenkette transformiert. Die
	Lesbarkeit ist in der Regel besser als bei |plain|, aber nicht
	alle Datentypen lassen sich verlustfrei und problemlos wieder
	einlesen. Für den Datentyp muss ein geeigneter Konverter oder
	Konstruktor eingerichtet sein, der die Rückwandlung der
	Zeichenkette in den Datenwert sicherstellt.
	Formatierungsparameter wie Ausgabegenauigkeit,
	Darstellungsformat und lokale Besonderheiten werden
	berücksichtigt, können aber eine Weiterverarbeitung als
	EDB-Datenfile verhindern.
[\index{|b|}, \index{|binary|}]
	Die Daten werden binär ausgegeben. Mit wenigen Ausnahmen,
	wie z.B. Funktionen oder Ausdrücke,
	haben alle Datentypen eine binäre Repräsentation der Werte,
	die wieder 1:1 gelesen werden kann.

Die Standardvorgabe für die Ausgabe ist |plain|.
Die Deklaration des Datentypes im Kopf kann mit |compcat| bzw.
|verbose| modifiziert werden. Bei |nohead| wird im
Ausgabemodus |plain| und |label| der Kopfteil unterdrückt, bei
|binary| wirkt |nohead| wie |compact|.

\ssec 	Daten exportieren

Für den export der Daten an andere Programme ist die Darstellung der
Datenwerte als Zeichenkette am besten geeignet. Der Dateikopf wird
nicht benötigt, eine Kommentarzeile mit den Namen der Variablen kann
aber hilfreich sein.

[\index{|data|}[|=crlf|]]
	Die Daten werden analog zu |label| ausgegeben, es wird kein
	Dateikopf erzeugt. Die erste Zeile enthält die Namen
	der Variablen. Diese kann mit dem Parameter |nohead| unterdrückt
	werden.
	Falls \index{|crlf|} als Argument angegeben wird, werden
	die Ausgabezeilen mit Wagenrücklauf und Zeilenvorschub abgesschlossen.
[\index{|x|}, \index{|export|}]
	Ist ein symbolischer Name für die Kombination |data,nosplit|.
[\index{|csv|}]
	Ist ein symbolischer Name für die Kombination
	|data=crlf,nosplit,nohead,locale|.

\ssec	Formatierte Ausgabe

\index[Formatierte Ausgabe]

Die Ausgabedefinition \index{|fmt|} erlaubt eine formatierte Ausgabe
von Datensätzen. Die Syntax lautet: |fmt[|<head>|]=|<fmt>.
Als Argument wird ein Formatstring <fmt> für die einzelnen
Datenzeilen übergeben. Die Datenwerte werden mittels
\index{Parametersubstitution} eingebaut. Optional kann auch ein Format
<head> für die Kopfzeile angegeben werden. Falls die Formatanweisung
Kommas enthält, muss die Ausgabedefinition in geschwungene Klammern gesetzt
werden.

So liefert z.B. der Aufruf
---- eval
{
str cmd = "edb -p 'fmt=$(num:%d): $(first_name:%s) $(family_name:%s)' pers.edb"
input("verbatim", cmd);
input(NULL, "die Ausgabe");
input("verbatim", popen(cmd, "r"));
}
----

\ssec	\label{md}Ausgabe als Datenmatrix

\index[Ausgabe als Datenmatrix]
Mit der Ausgabedefinition \index{|md|} werden die Daten zu einer Datenmatrix
aufsummiert.

Beim Einrichten der Ausgabestruktur wird die resultierende Datenmatrix
entsprechend der Struktur des Datentyps generiert. Bei der Ausgabe
eines Satzes werden die Werte zu den entsprechenden Zellen der
Datenmatrix addiert. Erst beim Schließen der Ausgabestruktur wird die
Datenmatrix ausgegeben.

Als Argument kann ein Ausgabemodus für die Datematrix angegeben
werden. Fehlt dieser, wird die Datenmatrix binär ausgegeben.

\index[Rahmenbedingungen für die Ausgabe als Datenmatrix]
Für die Ausgabe als Datenmatrix muss
die Struktur des Datentyps gewisse Rahmenbedingungen erfüllen. Notfalls
müssen mithilfe der Filter |trans| oder |cut| geeignete
Datentyptransformationen durchgeführt werden.

Jede einzelne Komponente muss eines der folgenden drei Bedingungen erfüllen:
*	Die Komponente ist ein Aufzählungstyp;
*	Die Komponente ist eine Struktur, die sich ausschließlich aus
	Aufzählungstypen zusammenssetzt;
*	Die Komponente ist eine aufsummierbare Variable.

Aus den Strukturkomponenten, die die ersten beiden Bedingungen
erfüllen, werden Achsen Konstruiert. Der Name der Komponente bestimmt
den Namen der Achse, während die möglichen Ausprägungen die
Achenbezeichner festlegen. Die restlichen Komponenten bilden den
Datentyp der Datenmatrix.

Ob eine Komponente aufsummierbar ist, ist eine inhaltliche und keine
technische Frage. So gut wie alle Datentypen (auch Zeichenketten) lassen
sich summieren, aber nicht alle Summationen sind sinnvoll.
So werden z.B. beim Aufsummieren von Zeichenketten die einzelnen Textteile
zusammengehängt.

Die Datei \index{|pers.edb|} enthält keine summierbaren Variablen, und nur
|gender| ist ein Aufzählungstyp.
Mit einem geeigneten Filter läßt sich aber eine Datenmatrix mit der
Anzahl der Männer und Frauen daraus generieren.

Der Aufruf
---- eval
{
str cmd = "edb -f 'cut=gender,{int anz = 1}' -p md=std pers.edb";
input("verbatim", cmd);
input(NULL, "liefert");
input("verbatim", popen(cmd, "r"));
}
----

Von der Dateistruktur wird nur |gender| verwendet, Zusätzlich wird
eine Zählvariable |anz| eingerichtet.
