/*
:*:	integer data types for EFEU-Libraries
:de:	Ganzzahldatentypen für EFEU-Programme

$Header <EFEU/$1>

$Note
:*:
This file is createt from template on installation.
It contains system specific adjustments. Do not edit this file,
edit |@SRC@| instead.
:de:
Diese Datei wurde aus der Schablone während der Installation generiert.
Sie enthält systemspezifische Anpassungen. Änderungen sollten nicht hier,
sondern in |@SRC@| vorgenommen werden.

$Copyright (C) 2006 Erich Frühstück
This file is part of EFEU.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Library General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with this library; see the file COPYING.Library.
If not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
*/

#ifndef EFEU_stdint_h
#define EFEU_stdint_h	1

@eval include stdint.h

@beg -x check
@@include stdint.h
@@eval success HAS_LONG_LONG 'long long x'
@@eval failure NEED_INT8 'int8_t x'
@@eval failure NEED_UINT8 'uint8_t x'
@@eval failure NEED_INT16 'int16_t x'
@@eval failure NEED_UINT16 'uint16_t x'
@@eval failure NEED_INT32 'int32_t x'
@@eval failure NEED_UINT32 'uint32_t x'
@@eval failure NEED_INT64 'int64_t x'
@@eval failure NEED_UINT64 'uint64_t x'

#if	NEED_INT8
fputs("typedef signed char int8_t;\n", stdout);
#endif

#if	NEED_UINT8
fputs("typedef unsigned char uint8_t;\n", stdout);
#endif

#if	NEED_INT16
fputs("typedef short int int16_t;\n", stdout);
#endif

#if	NEED_UINT16
fputs("typedef unsigned short int uint16_t;\n", stdout);
#endif

#if	NEED_INT32
if	(sizeof(int) >= 4)
	fputs("typedef int int32_t;\n", stdout);
else	fputs("typedef long int int32_t;\n", stdout);
#endif

#if	NEED_UINT32
if	(sizeof(unsigned int) >= 4)
	fputs("typedef unsigned int uint32_t;\n", stdout);
else	fputs("typedef unsigned long int uint32_t;\n", stdout);
#endif

#if	NEED_INT64
if	(sizeof(int) >= 8)
	fputs("typedef int int64_t;\n", stdout);
else if	(sizeof(long int) >= 8)
	fputs("typedef long int int64_t;\n", stdout);
else
#if	HAS_LONG_LONG
	fputs("typedef long long int int64_t;\n", stdout);
#else
	fputs("typedef long int int64_t;\n", stdout);
#endif
#endif

#if	NEED_UINT64
if	(sizeof(unsigned int) >= 8)
	fputs("typedef unsigned int uint64_t;\n", stdout);
else if	(sizeof(unsigned long int) >= 8)
	fputs("typedef unsigned long int uint64_t;\n", stdout);
else
#if	HAS_LONG_LONG
	fputs("typedef unsigned long long int uint64_t;\n", stdout);
#else
	fputs("typedef long int int64_t;\n", stdout);
#endif
#endif

@end

#endif	/* EFEU/stdint.h */
