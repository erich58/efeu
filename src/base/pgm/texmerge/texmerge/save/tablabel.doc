\documentclass[10pt,a4paper]{article}
\usepackage{manpage}
\advance\oddsidemargin by -2cm
\advance\textwidth by 5cm
\advance\voffset by -2cm
\advance\textheight by 4cm
\begin{document}
\MPsecnum{1}
\begin{manpage}
\MPsecnum{7}
\MPentry{TabLabel}
\MPsection{BEZEICHNUNG}
\MPcaption{Tabellenachsen}
\MPsection{ÜBERSICHT}
\begin{MPhangpar}
{\tt{}\#include $<$tablabel.tm$>$}\end{MPhangpar}

\begin{MPhangpar}
{\tt{}DataBase TabLabelDB;}\end{MPhangpar}

\begin{MPhangpar}
{\tt{}TabLabel TabLabel (str {\it{}name})}\end{MPhangpar}

\begin{MPhangpar}
{\tt{}str TabLabel ()}\end{MPhangpar}

\begin{MPhangpar}
{\tt{}void ListLabel(IO io = {\it{}iostd})}\end{MPhangpar}

\begin{MPhangpar}
{\tt{}void AddLabel(str {\it{}key}, str {\it{}name}, IO {\it{}io})}\end{MPhangpar}

\MPsection{BESCHREIBUNG}
Der Datentype {\tt{}TabLabel} definiert eine Tabellenachse.
Er wird in Kombination mit dem Datentype {\tt{}SynTab}
(Vergleiche dazu {\it{}SynTab(7)}) zur Einarbeitung von Daten
aus einer Datenmatrix verwendet.

Eine Tabellenachse kann sowohl für die Zeilen{-} als auch die
Spalten einer Tabelle verwendet werden.
Sie hat den folgenden Aufbau:

\begin{MPnofill}
struct TabLabel \{
~       str key;        /$\ast$ Kennung $\ast$/
~       str name;       /$\ast$ Achsenname $\ast$/
~       str select;     /$\ast$ Selektor $\ast$/
~       DataBase tab;   /$\ast$ Indextabelle $\ast$/
~       str special;    /$\ast$ Sonderdefinitionen $\ast$/
\};
\end{MPnofill}
Dabei gibt {\tt{}TabLabel::key} die Kennung der Tabellenachse
und {\tt{}TabLabel::name} den
Namen der zugehörigen Achse in der Datenmatrix an. Die
Variable {\tt{}TabLabel::select} definiert einen Selektionsstring,
der beim Laden der Datenmatrix die richtige Reihenfolge
der Achsenelemente (Wichtig bei Spalten!) sicherstellt
und eventuell benötigte Zusammenfassungen generiert.
Der Konverter {\tt{}str TabLabel()} liefert den Selektionsstring
der Achsenstruktur. Damit kann die Achse stellvertretend für
seine Komponente beim Laden einer Datenmatrix angegeben werden.

Die Datenbank {\tt{}TabLabel::tab} enthält die einzelen
Zeilen{-} bzw. Spaltenbezeichner und die zugehörigen
Selektionsdefinitionen der Datenmatrix.

In {\tt{}TabLabel::special} stehen LaTeX{-}Befehle, die zu Beginn
eines Tabellenkopfes (Spaltenachse) bzw. Tabellenkörpers (Zeilenachse)
ausgegeben werden.

Datentypen werden in der globalen Datenbank {\tt{}TabLabelDB} gespeichert
und können dort unter ihrem Namen {\tt{}TabLabel::key} abgerufen werden.
Die Abfrage erfolgt über einen Konstruktor, damit ein String
mit dem Achsennamen stellvertretend für die Achse selbst eingesetzt werden
kann.

Die Datenbank wird mit den zwei Einträgen {\tt\symbol{34}}CDummy{\tt\symbol{34}} und {\tt\symbol{34}}LDummy{\tt\symbol{34}}
initialisiert. Auf sie wird von {\it{}SynTab(7)} zugegriffen,
wenn die entsprechenden Achsen nicht definiert sind.
Die Funktion {\tt{}ListLabel} listet alle in der Datenbank {\tt{}TabLabelDB}
definierten Achsendefinitionen auf.

\MPsubsection{Konstruktion von Achsendefinitionen}
Achsendefintionen werden am einfachsten mit der Funktion
{\tt{}AddLabel} konstruiert und in der Datenbank {\tt{}TabLabelDB} eingetragen.
Als Argument wird die Achsenkennung {\it{}key},
der Name der zugehörigen Datenachse und eine IO{-}Struktur mit
Definitionszeilen für die einzelnen Achsenbezeichner übergeben.
In der Regel wird anstelle der IO{-}Struktur ein Definitionsstring
(implizite Konvertierung) übergeben.

Jede Definitionszeile besteht aus zwei Einträgen (Kennung und Bezeichner),
die durch ein Leerzeichen oder einem Tabulator getrennt sind.
Die Kenneung, die keine Leerzeichen oder Tabulatoren enthalten darf,
bestimmt die Selektion in der Datenmatrix,
der Bezeichner definiert den Achsenbezeichner bei der Ausgabe
der Tabelle.
Der Bezeichner kann beliebig viele Leerzeichen und Tabulatoren enthalten.

Folgende Kennungen sind möglich:
\begin{MPlist}
\MPitem{{\tt{}@}}
Kein Achsenbezeichner, die Komponente {\tt{}TabLabel::special} (siehe oben)
wird mit dem Bezeichner erweitert.
\MPitem{{\tt{}{\it{}name}}}
Der Name {\it{}name} gibt den zugehörigen Achsenbezeichner in der Datenmatrix
an.
\MPitem{{\tt{}:{\it{}name}[{\it{}liste}]}}
Der Achsenbezeichner {\it{}name} wird erst beim Laden eingerichtet und die
Daten ergeben sich durch entsprechnde Aggregation der in {\it{}list}
angeführten Achsenbezeichner.
\MPitem{{\tt{}.}}
Der Tabellenachse wird kein Achsenbezeichner in der Datenmatrix zugeordnet.
Bei Tabellen mit komplexeren Datentransformationen können in einer
Tabellenzeile aus einem Datenmatrixeintrag mehrere Tabellenwerte
errechnet werden. Die Tabellenachse benötigt damit mehr Spalten
als Datenwerte vorhanden sind.
Bei Zeilenachsen können damit benannte Leerzeilen konstruiert werden.
\end{MPlist}
Zu Beginn eines Bezeichners können spezielle Kennungen stehen,
die der Reihe nach abgefragt werden. Das erste Zeichen, das
keiner Kennung mehr entspricht, stellt den Beginn des Achsenbezeichners
dar.

Folgende Kennungen sind möglich:
\begin{MPlist}
\MPitem{{\tt{}[{\it{}size}]}}
Explizite Angabe der Höhe einer Zeile, bzw. Breite einer Spalte.
Nur notwendig, wenn nicht alle Zeilen die gleiche Höhe oder alle
Spalten die gleiche Breite haben.
\MPitem{{\tt{}@}}
Eine Leerzeile wird ausgegeben (Alte Definition,
Besser: Eigene Definitionszeile mit Punkt als Kennung und leeren
Bezeichner, siehe 1. Beispiel).
\MPitem{{\tt{}$\ast$}}
Die Zeile wird fett gesetzt.
\MPitem{{\tt{}{-}}}
Die Zeile wird mit fetten Linien gesetzt.
\MPitem{{\tt{}+}}
Die Zeile wird eingerückt. Mehrere Einrückungen sind zulässig.
\end{MPlist}
Mit Ausnahme der Spaltenbreite werden alle anderen Kennungen für
Spaltenachsen ignoriert.
\MPsection{BEISPIELE}
Das folgende Beispiel zeigt eine einfache Zeilenachse mit einer Gliederung
durch Leerzeilen.

\begin{MPnofill}
AddLabel({\tt\symbol{34}}sv{\tt\symbol{34}}, {\tt\symbol{34}}sv{\tt\symbol{34}}, string !
MANN    Männer
FRAU    Frauen
.
A00{-}18  Bis 18
A19{-}24  19 bis 24
A25{-}29  25 bis 29
A30{-}39  30 bis 39
A40{-}49  40 bis 49
A50{-}54  50 bis 54
A55{-}59  55 bis 59
A60{-}99  60 und älter
.
Burg    Burgenland
Kaer    Kärnten
Nied    Niederösterreich
Ober    Oberösterreich
Salz    Salzburg
Stei    Steiermark
Tiro    Tirol
Vora    Vorarlberg
Wien    Wien
Blnz    Keine Zuordnung
.
INL     Inländer$\backslash$Innen
AUS     Ausländer$\backslash$Innen
.
GES     $\ast$Insgesamt
!);
\end{MPnofill}
Der folgende Spaltenkopf besitzt eine Doppelgliederung.
Die Achsenbezeichner beziehen sich auf die unterste Gliederung.
Beachte, daß zwischen der Letzten Sonderdefinition und dem
ersten Achsenbezeichner automatisch ein {\tt\symbol{34}}$\backslash$norule{\tt\symbol{34}} eingefügt
wird.

\begin{MPnofill}
AddLabel({\tt\symbol{34}}hdr8{\tt\symbol{34}}, {\tt\symbol{34}}epi{\tt\symbol{34}}, string !
@       $\backslash$$\backslash$lineheight\{1\}
@       $\backslash$$\backslash$norule \& Unselbständig Erwerbstätige$\backslash$$\backslash$fn1 \&
@       $\backslash$$\backslash$lmulticol\{3\}\{davon haben mindestens eine Episode von:\}$\backslash$$\backslash$cr 
@       $\backslash$$\backslash$lineheight\{1\}
GES     $\backslash$$\backslash$norule
AEPI    Arbeitslosigkeit 
PEPI    Pension 
SEPI    Sonstiges$\backslash$$\backslash$fn2
!);
\end{MPnofill}

Die Dummyachsen {\tt\symbol{34}}CDummy{\tt\symbol{34}} und {\tt\symbol{34}}LDummy{\tt\symbol{34}} sind folgend definiert:

\begin{MPnofill}
AddLabel({\tt\symbol{34}}CDummy{\tt\symbol{34}}, NULL, string !
A       Spalte A
B       Spalte B
C       Spalte C
D       Spalte D
!);
~
AddLabel({\tt\symbol{34}}LDummy{\tt\symbol{34}}, NULL, string !
1       Zeile 1
2       Zeile 2
3       Zeile 3
4       Zeile 4
.       .......
n       $\ast$Zeile n
!);
\end{MPnofill}
\MPsection{SIEHE AUCH}
texmerge(1), SynTab(7).
\end{manpage}
\end{document}
