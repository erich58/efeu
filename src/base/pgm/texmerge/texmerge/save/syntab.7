\secnum[7]
\entry{SynTab}
\Name
\caption{Werkzeuge zur Tabellengenerierung}
\Synopsis
\tthang	\#include <syntab.tm>
\tthang	SynTab SynTab (IO \it{io}, bool \it{clrpage} = true)
\tthang	SynTab SynTab (IO \it{io}, int \it{margin}, bool \it{clrpage} = true)
\tthang	void SynTab::printf (str \it{fmt}, ...)
\tthang	void SynTab::line (str \it{text})
\tthang	void SynTab::caption (str \it{hname}, str \it{sname})
\tthang	void SynTab::def (str \it{name}, str \it{def})
/*
\tthang	virtual void SynTab::cmdline (str \it{cmd})
\tthang	virtual void SynTab::cmdline (str \it{cmd}, str \it{opt}, str \it{arg})
\tthang	virtual void SynTab::cmdline (str \it{cmd}, str \it{arg})
*/
\tthang	virtual void SynTab::note (str \it{name})
\tthang	virtual void SynTab::note (...)
\tthang	void SynTab::begin (TabLabel \it{col}, int \it{width} = 2, int \it{height} = 2)
\tthang	void SynTab::body (TabLabel \it{line}, mdmat \it{md}, VirFunc \it{idx} = NULL, int \it{lag} = 0)
\tthang	virtual void SynTab::tabline (str \it{label})
\tthang	virtual void SynTab::tabline (str \it{label}, ...)
\tthang	void SynTab::end ()
\Description
Der Datentype \tt{SynTab} dient zur Generierung
einer Tabelle im Synthesis-Standard. Er dient zur Konstruktion einer
\tt{SynTab}-Umgebung, die in  eine \tt{SynTable}-Umgebung eingebettet ist.

Eine \tt{SynTab}-Struktur wird mit einem Konstruktor
eingerichtet, der automatisch auch den Beginn der zugehörigen
\tt{SynTable}-Umgebung generiert.

Bei den Konstruktoren gibt
die Variable \it{io} die aktuelle Ausgabestruktur an.
Wahlweise kann eine Tabelle mit der aktuellen Randeinstellung oder
mit expliziter Angabe des Randes generiert werden.
Falls das optionale Flag \it{clrpage} gesetzt ist,
wird die Tabelle auf einer
neuen Seite begonnen.

Der Abschluß der \tt{SynTable}-Umgebung erfolgt automatisch bei Freigabe
der \tt{SynTab}-Struktur. Eine explizite Freigabe ist mit der
Funktion \tt{free()}, oder durch Initialisierung mit NULL möglich.
Endet die Lebensdauer einer \tt{SynTab}-Struktur nach einer
Tabellendefinition, kann auf die explizite Freigabe verzichtet werden,
da der Destruktor automatisch aufgerufen wird.

Die Tabellenüberschrift wird am einfachsten mit der Funktion
\tt{SynTab::caption} generiert.
Als Argument wird die Haupt- und Unterüberschrift übergeben.
Sie erzeugt die Ausgabe
\tt{\\caption{\it{hname}}} und \tt{\\subcaption{\it{sname}}}.

Tabellenanmerkungen können mit der Funktion \tt{note} generiert
werden. Dabei kann entweder ein einzelner String (für eine Anmerkung)
oder eine Stringliste mit den Namen von Anmerkungen übergeben
werden. Dabei wird angenommen, daß entsprechende Anmerkungen mit
den \LaTeX-Macros \tt{\\setnote} (Synthesis-Standard) eingerichtet wurden.

Zur Konstruktion beliebiger Textteile in der Tabellenumgebung stehen noch
folgende Funktionen zur Verfügung:

\list
\ttitem{SynTab::printf}
Erlaubt eine formatierte Ausgabe von Variablen
(Vergleiche dazu \it{printf(3)}).

\ttitem{SynTab::line}
gibt \it{text}, gefolgt von einem Zeilenvorschub aus.

\ttitem{SynTab::def}
dient zur Definition einfacher \LaTeX-Makros mit dem Namen
\it{name} und dem Definitionsstring \it{def}.

/*
\ttitem{SynTab::cmdline}
gibt eine Befehlszeile aus. Dabei wird \it{name} ein Backslash
vorangestellt, \it{opt} in eckige Klammern und \it{arg}
int geschwungene Klammern gestellt.
*/
\end

\subsection{Tabellenkonstruktion}

Zur Konstruktion von Tabellen stehen die Funktionen \tt{SynTab::begin},
\tt{SynTab::body} und \tt{SynTab::end} zur Verfügung.

Mit \tt{SynTab::begin} wird der Tabellenkopf eingeleitet.
Als Argument wird der Achsenbezeichner für die Spalten
und optional die Standardbreite
einer Spalte und die Standardhöhe einer Zeile übergeben.

Der Tabelenkörper wird mit der Funktion \tt{SynTab::body}
generiert. Als erstes Argument wird die Achsenstruktur für
die Tabellenzeilen übergeben. Danach folgt die Datenmatrix
mit den Tabellendaten und die zugehörigen Auswertungsparameter.

Die Tabellendaten werden mit der Funktion \tt{mdmat::data} generiert,
wobei der Definitionsstring von der Achsenstruktur \it{line} bestimmt wird.
Die anderen Parameter werden von der Funktion \tt{SynTab::body} übernommen.

Eine einzelne Tabellenzeile wird mit der Funktion
\ttitem{SynTab::tabline} generiert. Als Argument wird der
Zeilenbezeichner \it{label} und die Liste der Tabellenwerte
ausgegeben. Fehlen die Tabellenwerte, wird eine Leerzeile (mit
hängenden Linien) generiert.

Die Funktion \tt{SynTab::end} schließt eine Tabelle ab.

\Example
Das folgende Beispiel
\source
#include <syntab.tm>

\/*	Testdaten und Achsenbezeichner
*/

mdmat md = mdread ((IO) string !
2	c1	c2	c3
l1	1.1	1.2	1.3
l2	2.1	2.2	2.3
l3	3.1	3.2	3.3
!, "type=double x=Spalten y=Zeilen");

TabLabel col = TabLabel("col", "Spalten", string !
c1	Spalte 1
c2	Spalte 2
c3	Spalte 3
!);

TabLabel line = TabLabel("line", "Zeilen", string !
l1	Zeile 1
l2	Zeile 2
l3	Zeile 3
!);

\/*	Tabelle
*/

SynTab tab = SynTab(iostd);
tab.caption("Testtabelle", "Untertitel");
tab.begin(col);
tab.body(line, md);
tab.end();
tab.note("n1");
free(tab);
\end

generiert die folgende Ausgabe

\source
\\clearpage
\\begin{SynTable}
\\caption{Testtabelle}
\\subcaption{Untertitel}

\\begin{SynTab}{2}{2,2,2}
\\thislinebold
\\norule & Spalte 1 & Spalte 2 & Spalte 3 \\cr
Zeile 1 & 1.10 & 1.20 & 1.30 \\cr
Zeile 2 & 2.10 & 2.20 & 2.30 \\cr
Zeile 3 & 3.10 & 3.20 & 3.30 \\cr
\\end{SynTab}

\\note{n1}
\\end{SynTable}
\end

\SeeAlso
printf(3) im \PRM.\break
texmerge(1), TabLabel(7).

\Notes
Die Variablen \tt{PrintListBegin}, \tt{PrintListDelim} und \tt{PrintListEnd}
werden bei der Tabellenkonstruktion umdefiniert.
