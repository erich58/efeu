/*
Befehle für die Titelseite

$Copyright (C) 1999 Erich Frühstück
This file is part of EFEU.

EFEU is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

EFEU is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with EFEU; see the file COPYING.
If not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
*/

\eval	{
	str date = NULL;	// Publikationsdatum
	str dochead = NULL;	// Kopfzeilentext
	str title = NULL;	// Haupttitel
	str subtitle = NULL;	// Untertitel
	str author = NULL;	// Autorenliste
	str docnote = NULL;	// Prozessuale Anmerkung
	str addr = NULL;	// Adressenblock
	DataBase docflags = DataBase(str);
	DataBase setup = DataBase(str);
}

Dokumentart
	$1 <Stil>

Der Befehl $1 setzt die Dokumentart.

\def\style	DocStyle = xexpand(ParseLine(cin));

Dokumentflags
	$1 <flags>

Der Befehl $1 erweitert die Flags zur Dokumentverarbeitung.
Inwieweit einzelne Flags bei der Formatierung berücksichtigt werden,
hängt vom jeweiligem Ausgabetreiber ab.

\def\addflag	for (x in split(ParseLine(cin), ",")) docflags += xexpand(x);

LaTeX-Pakete
	$1[<opt>] <name>

Der Befehl $1 generiert für LaTeX die Definitionszeile
<|\\usepackage[<opt>]{<name>}|>. Damit werden Zusatzpakete geladen.

\def\package	{{
	str opt = ParseOpt(cin, true);
	str name = ParseLine(cin);

	if	(opt)	opt = "[" + opt + "]";

	latex::preamble += sprintf("\\usepackage%s{%s}\n", opt, name);
}}

Datum setzen
	$1 <Datum>

Der Befehl $1 setzt das Datum des Dokuments.

\def\date	date = expand(ParseLine(cin));

Datum abfragen
	$1

Der Befehl $1 ruft das Dokumentdatum ab.

\def\thedate	plain(date);

Titel
	$1 |[|<Kurzform>|]| <Titel>\br
	<Untertitel>

Falls das Dokument noch nicht begonnen wurde, setzt der Befehl $1
Titel und Untertitel des Dokuments. Ansonsten wird ein neues Kapitel
begonnen, wobei die Kurzform für den Eintrag ins Inhaltsverzeichnis
verwendet wird.

\def\title	{{
	str opt = ParseOpt(cin, true);
	str main = ParseLine(cin);
	str sub = ParsePar(cin);

	if	(stat)	section('C', opt, main);
	else		title = expand(main), subtitle = expand(sub);
}}

Dokumentkopf
	$1 <Dokumentkopf>

Der Befehl $1 setzt den Dokumentkopf

\def\dhead	dochead = expand(ParseLine(cin));

Dokumentanmerkung
	$1 <Dokumentanmerkung>

Der Befehl $1 setzt die Dokumentanmerkung für die Titelseite.

\def\dnote	docnote = expand(ParseLine(cin));

Autorenliste
	$1 <Autorenliste>\br
	~~~~&ldots;

Der Befehl $1 definiert die Autorenliste für die Titelseite.

\def\author	author = expand(strsub(ParseLine(cin, true), "\n", "\\br\n"));

Adressblock
	$1 <Adresse>\br
	$1\br
	<Adresse>

Der Befehl $1 definiert den Adressenblock für die Titelseite.

\def\addr	{
addr = ParseLine(cin);
addr = expand(addr ? addr : ParsePar(cin), false);
}

Vorwort/Einführung

Der Befehl $1 beginnt das Vorwort

\def\intro	newenv('i');

Literaturverzeichnis

Der Befehl $1 beginnt das Literaturverzeichnis

\def\bibliography	{{
	str mark = ParseLine(cin);
	newenv('b', expand(mark ? mark : "99"));
}}

Eintrag ins Literaturverzeichnis

Der Befehl $1 beginnt einen Eintrag ins Literaturverzeichnis

\def\bibitem	{{
	str opt = xexpand(ParseOpt(cin, true));
	str name = xexpand(ParseLine(cin));

	if	(opt)	opt = "[" + opt + "]";

	plaintex(sprintf("\\bibitem%s{%s}\n", opt, name));
}}

Abruf eines Literatureintrages

Der Befehl $1 ruft einen Literatureintrag ab.

\def\cite	{{
	str opt = xexpand(ParseOpt(cin, true));
	str name = xexpand(ParseArg(cin));

	if	(opt)	opt = "[" + opt + "]";

	plaintex(sprintf("\\cite%s{%s}\n", opt, name));
}}
