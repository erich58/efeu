/*
Begriffsliste generieren

$Copyright (C) 1999 Erich Frühstück
This file is part of EFEU.

EFEU is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

EFEU is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with EFEU; see the file COPYING.
If not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
*/

Begrifsname

\eval	{
	struct DATA {
		str key;
		str name;
		bool flag;
		List_t ref;
	};

	int DATACMP(DATA x, DATA y)	cmp(x.key, y.key);

	DataBase srctab = DataBase(DATA, DATACMP);
	int Index = 0;

	inline int add_entry (str name)
	{
		DATA key = { name, DocName, false };
		srctab += key;
		return srctab.index(key);
		return 0;
	}

	inline void ref_entry (str name)
	{
		Index = srctab.index({ name });

		if	(Index >= dim(srctab))
		{
			printf("// Unbekannter Begriff %s\n", name);
			return;
		}

		if	(srctab[Index].flag)	return;

		srctab[Index].flag = true;

		for (x in srctab[Index].ref)
			ref_entry(x);
	}

	inline void ref_list (void)
	{
		srctab.sort(lexcmp);

		for (x in srctab)
			if (x.flag)
				printf("\\include %s\n", x.name);
	}

	DocExit = "ref_list()";
}

\def\name	Index = add_entry(ParseLine(cin));
\def\bref	srctab[Index].ref.push(ParseArg(cin));
\def\entry	ref_entry(ParseLine(cin));
\def\listall	for (x in srctab) x.flag = true;
