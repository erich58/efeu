/*
:*:environments
:de:Umgebungen

$Copyright (C) 1999 Erich Frühstück
This file is part of EFEU.

EFEU is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

EFEU is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with EFEU; see the file COPYING.
If not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
*/

:*:code environment
:de:Kodeumgebung

:*:The command $1 starts the code environment. Inside this
environment, the default font is typewriter.
:de:Der Befehl $1 wechselt in die Code-Umgebung. Innerhalb dieser
Umgebung wird der Text in Schreibmaschine gesetzt.

\def\code	newenv('c');

:*:hanging paragraphs
:de:Hängende Absätze

:*:The command $1 starts a region with hanging paragraphs.
:de:Der Befehl $1 beginnt eine Umgebung mit hängenden Absätzen.

\def\hang	newenv('h');

:*:quoting
:de:Einrückung

:*:The command $1 starts a region with quoted (indented) text.
:de:Der Befehl $1 wechselt in die quote-Umgebung.
Innerhalb dieser Umgebung wird der Text eingerückt.

\def\quote	newenv('q');

:*:end current environment
:de:Aktuelle Umgebung beenden

:*:The command $1 closes the current environment.
:de:Der Befehl $1 schließt die aktuelle Umgebung ab.

\def\end	endenv(0);

:*:end all environments
:de:Alle Umgebungen beenden

:*:The command $1 closes all open environments.
:de:Der Befehl $1 schließt alle Umgebungen ab.

\def\endall	endenv('a');

/*	Listen
*/

:*:end list
:de:Liste beenden

:*:The command $1 closes the current list environment.
:de:Der Befehl $1 schließt die aktuelle Liste ab.

\def\endlist	endenv('l');

:*:roman item
	$1 <tag>
:de:Beschreibungsmarke in Standardschrift
	$1 <Marke>

:*:The command starts a new description item with a roman tag.
:de:Der Befehl $1 setzt eine Beschreibungsmarke in Standardschrift.

\def\item	newline(); cout << "[<=" << ParseLine(cin) << "=>]\n";

:*:italic item
	$1 <tag>
:de:Beschreibungsmarke in Kursivschrift
	$1 <Marke>

:*:The command starts a new description entry with a italic item <tag>.
:de:Der Befehl $1 setzt eine Beschreibungsmarke in Kursivschrift.

\def\ititem	newline(); cout << "[</" << ParseLine(cin) << "/>]\n";

:*:boldface item
	$1 <tag>
:de:Beschreibungsmarke in Fettschrift
	$1 <Marke>

:*:The command starts a new description entry with a bold face item <tag>.
:de:Der Befehl $1 setzt eine Beschreibungsmarke in Fettschrift.

\def\bfitem	newline(); cout << "[" << ParseLine(cin) << "]\n";

:*:typewriter item
:de:Listeneintrag in Schreibmaschinenschrift
	$1 <Marke>

:*:The command starts a new description entry with a typewriter item <tag>.
:de:Der Befehl $1 setzt eine Beschreibungsmarke in
Schreibmaschinenschrift.

\def\ttitem	newline(); cout << "[<|&;" << ParseLine(cin) << "&;|>]\n";

:*:partial page
	$1 |[|<margin>|]| <flags>
:de:Teilseite
	$1 |[|<margin>|]| <flags>

:*:The command $1 starts a partial page, obsolete.
:de:Der Befehl $1 beginnt eine neue Teilseite, veraltet.

\def\spage	{{
	str pos = xexpand(ParseOpt(cin, true));
	str flags = xexpand(ParseLine(cin));
	newenv('p', pos, flags);
}}
