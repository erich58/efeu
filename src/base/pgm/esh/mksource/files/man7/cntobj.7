\Name
CntObj -- Konstruktion eines Zählobjektes
\Synopsis
\tthang
\#include \<cntobj.ms\>

inline void CntObj(str <name>, Type_t <type>, IO <def>, str <arg> = NULL);

\Description

Die Funktion |CntObj| dient zur Konstruktion der Komponenten
eines Zählobjektes. Sie benötigt als Argumente einen Namen <name>
einen esh-Datentype <type> und eine Eingabestruktur <def> mit
Definitionszeilen. Mit <arg> kann optional der Zähldatentype (Argument von
|md_count|) angegeben werden. Standardmäßig wird |const void *data|
verwendet.

Es werden folgende Funktionen und Makros
definiert:

\ttitem	CT_<name>
	ist ein Makro mit einem String, der den Datentype <type>
	repräsentiert.
\ttitem	ini_<name>
	ist eine Funktion zur Initialisierung eines Elements der
	Datenmatrix. Wird keine besondere Initialisierungsfunktion
	benötigt, wird stellvertretend ein gleichnamiger Makro
	mit dem Wert |NULL| eingerichtet.
\ttitem	CB_<name>
	ist ein statischer Buffer zur Aufnahme der Daten eines
	Objekts vom Type <type>.
\ttitem	set_<name>
	ist eine Funktion zum Setzen der Werte des statischen
	Buffers |CB_|<name>.
\ttitem	add_<name>
	ist eine Funktion, die den Wert des statischen Buffers
	in eine Zelle der Datenmatrix addiert.

Alle Makros und Funktionen werden statisch generiert, da sie
nie direkt verwendet werden sondern nur zur Initialisierung
einer Variablen vom Type |MdCount_t| dienen.

Die einzelnen Zeilen der Eingabestruktur <def> bestehen aus
einem Schlüsselwort <key>, einer Komponentenkennung <var>
und einen Ausdruck <cmd>.

Bei der Komponentenkennung handelt es sich entweder um den Namen
eines Strukturelementes oder einem Punkt für den gesamten Datentype.
Die Stringregister 1 und 2 werden mit Ausdrücken initialisiert,
die auf das gewünschte Element der Datenmatrix, bzw. dem statischen
Buffer verweisen. Auf den Ausdruck wird Parametersubstitution
angewendet.

Das Schlüsselwort bestimmt, für welche Komponentenfunktion
der Ausdruck bestimmt ist. Folgende Kennungen sind möglich:

[|return|] bestimmt den Rückgabewert der Funktion |set_|<name>.
[|set|]	generiert eine Befehlszeile der Funktion |set_|<name>.
[|ini|]	generiert eine Befehlszeile der Funktion |ini_|<name>.
[|add|]	generiert eine Befehlszeile der Funktion |add_|<name>.

Ansonsten definiert <cmd> den Zuweisungswert der Komponente <var>
in der Funktion |set_|<name>. Zusätzlich wird auch eine Befehlszeile
für |ini_|<name> (Initialisierung mit 0) und |add_|<name>
(|+=|-Operator) generiert. Dies ist gleichbedeutend mit:
	\code
	ini	<var>	$1 = 0\br
	set	<var>	$2 = <cmd>\br
	add	<var>	$1 += $2\br

Nur wenn die Kennung |ini| verwendet wurde, wird auch eine Funktion
|ini_|<name> generiert, da in diesem Fall die Datenmatrix
wesentlich effizienter mit |memset| initialisiert werden kann.

Die Funktion |CntObj| wurde |inline| definiert, damit die
lokalen Variablen der rufenden Funktion bei der Parametersubstitution
sichtbar bleiben.

\Example

Das folgende Beispiel zeigt die Konstruktion eines Zählobjektes
für Strukturauswertungen. Die Dauer einer Episode wird über eine
globale Variable übergeben. Bei der Initialisierung wird davon
ausgegangen, daß die erste Achse der Datenmatrix mit der
Bibliotheksfunktion |time_axis| initialisiert wurde.
Damit ist gewährleistet, daß |time_range[idx[0]].tage| gerade die
Intervallänge liefert.

\spage [3]
@MSExample(dauer.bsp,erzeugt die Programmzeilen)
\end

\SeeAlso
\mref{mksource(1)},\br
\mref{macro(7)}, \mref{function(7)}, \mref{cntdef(7)}.

