Ident = "Zwei Datenmatrizen verknüpfen";
Copyright = "(c) 1997 Erich Frühstück, A-1090 Wien, Währinger Straße 64/6";
Version = "2";

bool PrintMode = true;
bool Reduce = false;
str VarDef = NULL;
str Title = NULL;
str Ein1 = NULL;
str Ein2 = NULL;
str Output = NULL;
str SelDef = NULL;
VirFunc Funktion = NULL;
str Expr = NULL;
Type_t Type = NULL;

PrintListDelim = "\t";

PgmOpt("F file", "gload(IncPath, #1)", "Datei mit Definitionen laden")
PgmOpt("E expr", "geval(#1)", "Ausdruck auswerten")

PgmOpt("add", "Funktion=operator\"+\"", "Punktweise Addition (default)")
PgmOpt("sub", "Funktion=operator\"-\"", "Punktweise Subtraktion")
PgmOpt("mul", "Funktion=operator\"*\"", "Punktweise Multiplikation")
PgmOpt("div", "Funktion=operator\"/\"", "Punktweise Division")
PgmOpt("min", "Funktion=operator\"min\"", "Minimum der beiden Werte")
PgmOpt("max", "Funktion=operator\"max\"", "Maximum der beiden Werte")
PgmOpt("f func", "eval(\"Funktion = \" + #1)", "Funktion/Operator")
PgmOpt("t type", "Type=expr(#1)", "Ausgabetype")
PgmOpt("e expr", "Expr=#1", "Ausdruck")

PgmOpt("r", "Reduce=true", "Entfernen von singulären Achsen")
PgmOpt("p prec", "float_prec=#1", "Genauigkeit der Zahlenwerte")
PgmOpt("v [name=]var", "VarDef=paste(' ', VarDef, #1)", "Variablenselektion")
PgmOpt("T titel", "Title=#1", "Titel der Ausgabedatei")
PgmArg("m1", "Ein1=#1", "Name der 1. Datenmatrix")
PgmArg("m2", "Ein2=#1", "Name der 2. Datenmatrix")
PgmOptArg("aus", "Output=#1;PrintMode=false", "Name der Ausgabedatei")
PgmXArg("*=*", "SelDef=paste(' ', SelDef, #1)", NULL)
PgmOptArg("name=var", NULL, "Selektionsparameter")

loadarg;

mdmat md1 = mdload(Ein1, SelDef, VarDef);
mdmat md2 = mdload(Ein2, SelDef, VarDef);

if	(Reduce)
{
	md1.reduce();
	md2.reduce();
}

if	(Expr)
{
	if	(Type == NULL)
	{
		eval(sprintf("%s x; %s y;", md1.type, md2.type));
		Type = typeof(expr(Expr));
	}

	eval(sprintf("virtual %s _EVALFUNC(%s x, %s y) return (%s);",
		Type, md1.type, md2.type, Expr));
	Funktion = _EVALFUNC;
}

mdmat md = mdexpr(Funktion, md1, md2);

if	(Type)		md.konv(Type);
if	(Title)		md.title = Title;

if	(PrintMode)	md.mark("#-1").print(iostd, "nohead");
else			md.save(Output);

free(md1);
free(md2);
free(md);
