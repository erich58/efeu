#!/bin/sh
# :*:check for preliminaries
# :de:Überprüfe die Voraussetzungen zur Installation
#
# Copyright (C) 2001 Erich Frühstück
# This file is part of EFEU.
# 
# EFEU is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
# 
# EFEU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with EFEU; see the file COPYING.
# If not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

# search path for header files

incpath="/usr/include/readline /usr/include"

for x in /usr/local/include
do
	if [ -d $x ]; then incpath="$incpath $x"; fi
done

# search path for libraries

libpath="/lib/lib* /usr/lib/lib*"

for x in /usr/local/lib
do
	if [ -d $x ]; then libpath="$libpath $x/lib*"; fi
done

# get top directory (absolut path needed)

if [ $# -ge 1 ]; then
	top=$1
else
	top="../.."
fi

top=`(cd $top; pwd)`
src=`pwd`

# search header

cfdir=$top/ppinclude
cfname=$cfdir/readline.pph
hdr="readline.h"

path=`find $incpath -name $hdr -print | sed -e 1q`

if	[ "$path" = "" ]; then
	echo "$0: header file $hdr not found."
	echo "You need readline development installed."
	exit 1
else
	incdir=`dirname $path`
fi

# search library

path=`find $libpath -name 'libreadline*' -print 2>/dev/null | sed -e 1q`

if	[ "$path" = "" ]; then
	echo "$0: readline library not found."
	echo "You need readline installed."
	exit 1
else
	libdir=`dirname $path`
fi

# add extra libraries

libs="-lreadline"

if	ls $libpath 2>/dev/null | grep libiberty > /dev/null; then
	libs="$libs -liberty"	# needed for very old readline version
fi

if	ls $libpath 2>/dev/null | grep ncurses > /dev/null; then
	libs="$libs -lncurses"
elif	ls $libpath 2>/dev/null | grep curses > /dev/null; then
	libs="$libs -lcurses"
fi

# create configuration file, overwrite only if changed !

if [ ! -d $cfdir ]; then
	mkdir -p $cfdir || exit 1
fi

cat > $cfname.tmp << !
/*
:*:configuration file for readline interface
:de:Konfigurationsdatei für readline Schnittstelle
\$Note
:*:Do not edit this file, it was created by $src/setup
:de:Diese Datei nicht editieren, sie wurde mit $src/setup generiert.
*/

RL_INC= -I$incdir
RL_LIB= -L$libdir $libs
!

if	cmp -s $cfname.tmp $cfname
then	rm $cfname.tmp
else	mv $cfname.tmp $cfname
fi

# check implementation

tmp=${TMPDIR:-/tmp}/base$$
trap "rm -rf $tmp" 0
trap "exit 1" 1 2 3

mkdir $tmp || exit 1
grep '^RL_' $cfname > $tmp/Makefile
cat >> $tmp/Makefile <<!
tprog: tprog.c; \$(CC) \$(RL_INC) -o \$@ tprog.c \$(RL_LIB)
!

cat >> $tmp/tprog.c << !
#include <stdio.h>
#include <readline.h>

int main (int argc, char **argv)
{
	rl_initialize();
	return 0;
}
!

if
	(cd $tmp; make > log.out 2>&1)
then
	exit 0
else
	echo "$0: project configuration failed"
	echo "--- make rules ---"
	nl $tmp/Makefile
	echo "--- test program ---"
	nl $tmp/tprog.c
	echo "--- error message ---"
	nl $tmp/log.out
	exit 1
fi
