/*
Basismakros für efeupp

$Copyright (C) 1999 Erich Frühstück
This file is part of EFEU.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Library General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with this library; see the file COPYING.Library.
If not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
*/

#ifndef	_base_pph
#define	_base_pph	1

/*
$Description
Die meisten C--Preprozessoren verwenden eine Reihe von
vordefinierten Makros, die in der Regel zur Systemabfrage
dienen. Diese können sich störend bei der Generierung der
Makefiles auswirken.
Die folgenden Makrodefinitionen werden automatisch gelöscht,
falls sie definiert sind:

unix, linux, dos, UNIX, MSDOS
*/

#undef	unix
#undef	linux
#undef	dos
#undef	UNIX
#undef	MSDOS

/*
Manche C--Preprozessoren liefern Fehlermeldungen, wenn bei einer
Makrofunktion für ein Argument kein Wert eingesetzt wird.
Der Makro |$1| wirkt wie ein leeres Argument,
verhindert aber die Fehlermeldung.
*/
#define	NullArg		@.

#if	__STDC__
/*
Der Makro |$1| konvertiert das Argument <x> in eine Zeichenkonstante.
Das Setzen eines Argumentes unter doppelte Anführungszeichen wird
von traditionellen C--Preprozessoren anders gelöst als
von ANSI--C--Preprozessoren. Um eine kompatible Beschreibungsbasis zu
erhalten, steht die Funktion |$1| für diese Aufgabe zur Verfügung.

*/
#define	String(x)	#x
#define	_Concat2(a,b)	@.##a##b##@.
#define	_Concat3(a,b,c)	@.##a##b##c##@.
#define	_Concat4(a,b,c,d)	@.##a##b##c##d##@.
#else
#define	String(x)	"x"
#define	_Concat2(a,b)	@.a@.b@.
#define	_Concat3(a,b,c)	@.a@.b@.c@.
#define	_Concat4(a,b,c,d)	@.a@.b@.c@.d@.
#endif

/*
$Description
Beim Zusammenhängen von Argumenten fügen manche Preprozessoren
ein Leerzeichen ein. Daher sollte für diese Aufgabe immer eine
der nachfolgenden Makros verwendet werden.
Sie sorgen dafür, daß zwischen den Argumenten keine Leerzeichen eingefügt
werden. Voraussetzung dafür ist aber auch, daß beim Funktionsaufruf
in der Argumentliste ebenfalls keine Leerzeichen auftreten.
*/

/*
Der Makro |$1| hängt die Argumente <a> und <b> zusammen.
*/
#define	Concat(a,b)	_Concat2(a,b)

/*
Der Makro |$1| hängt die Argumente <a> und <b> zusammen.
*/
#define	Concat2(a,b)	_Concat2(a,b)

/*
Der Makro |$1| hängt die drei Argumente <a>, <b> und <c> zusammen.
*/
#define	Concat3(a,b,c)	_Concat3(a,b,c)

/*
Der Makro |$1| hängt die vier Argumente <a>, <b>, <c> und <d> zusammen.
*/
#define	Concat4(a,b,c,d)	_Concat4(a,b,c,d)

/*
$SeeAlso
\mref{mkmf(1)}.
*/

#endif	/* base.pph */
