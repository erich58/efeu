/*
Kompilierungsregeln

$Copyright (C) 2001 Erich Frühstück
This file is part of EFEU.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Library General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with this library; see the file COPYING.Library.
If not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
*/

#ifndef	_Compile_pph
#define	_Compile_pph	1

#include <Name.pph>

/*
Der Makro |$1| generiert eine Kompilierungsregel mit Ziel <tg>,
Abhängigkeiten <dep> und Kompilerflags <args>.
*/
#define	CompileRule(tg,dep,args) \
@;@;tg: dep \
@;@+$(CC) $(STDDEFINES) $(CFLAGS) $(STDCFLAGS) $(SYSCFLAGS) args \
@;

/*
Der Makro |$1| generiert eine zu |CompileRule| kompatible
Regel für die Bestimmung von Abhängigkeiten.
*/
#define	DependRule(tg,dep,args) \
@;@;depend:: \
@;@+$(CPP) $(STDDEFINES) $(CFLAGS) $(STDCFLAGS) $(SYSCFLAGS) args | \
$(CPP2DEP) tg >> $(MAKEFILE) \
@;

#if	AddDebugInfo

/*
Der Makro |$1| generiert eine Kompilierungsregel mit Link-Flags.
*/
#define	LinkCompileRule(tg,dep,args,lflags) \
CompileRule(tg,dep,-o $@ args $(SYSLFLAGS) lflags $(SYSLIBS))

#else

#define	LinkCompileRule(tg,dep,args,lflags) @;\
@;tg: dep @;\
@+$(CC) $(STDDEFINES) $(CFLAGS) $(STDCFLAGS) $(SYSCFLAGS) -o $@ args \
	$(SYSLFLAGS) lflags $(SYSLIBS) @;\
@+strip $@ @;\
@;

#endif

/*
Der Makro |$1| generiert eine Kompilierungsregel für ein Objekt-File.
*/
#define	SpecialObjectRule(name,dep,flags) \
CompileRule(ObjectName(name),SourceName(name) dep,flags -c SourceName(name)) \
DependRule(ObjectName(name),SourceName(name),flags -c SourceName(name)) \
@;

/*
Der Makro |$1| generiert eine Kompilierungsregel für ein Objekt-File.
Zusätzlich wird eine Abhängigkeit für das Pseudoziel |all| und
eine Aufräumregel für das Pseudoziel |clean| generiert.
*/
#define	NormalObjectTarget(name,flags) \
AllTarget(ObjectName(name)) \
SpecialObjectRule(name,NullArg,flags) \
@;

/*
Der Makro |$1| generiert eine Kompilierungsregel für ein Kommando.
*/
#define	NormalProgramRule(name,flags,src,dep,libs) \
LinkCompileRule(ProgramName(name),src dep,flags src,libs) \
DependRule(ProgramName(name),src,flags src) \
@;

/*
Der Makro |$1| generiert eine Kompilierungsregel für ein Kommando.
Zusätzlich wird eine Abhängigkeit für das Pseudoziel |all| und
eine Aufräumregel für das Pseudoziel |clean| generiert.
*/
#define	NormalProgramTarget(name,flags,src,dep,libs)	\
AllTarget(ProgramName(name))				@;\
NormalProgramRule(name,flags,src,dep,libs)		@;

/*
Der Makro |$1| generiert eine Kompilierungsregel für ein
unter <dir> installiertes Kommando.
*/
#define	InstalledProgramRule(dir,name,flags,src,dep,libs) \
NormalProgramRule(PathName(dir,name),flags,src,dep,libs)

/*
Der Makro |$1| generiert eine Kompilierungsregel für ein
unter <dir> installiertes Kommando.
Zusätzlich wird eine Abhängigkeit für das Pseudoziel |all| und
eine Aufräumregel für das Pseudoziel |clean| generiert.
*/
#define	InstalledProgramTarget(dir,name,flags,src,dep,libs)	\
AllTarget(PathName(dir,ProgramName(name)))			@;\
InstalledProgramRule(dir,name,flags,src,dep,libs)		@;

/*
Der Makro |$1| ge neriert eine Kompilierungsregel für ein
einfaches Kommando mit nur einem Sourcefile.
*/
#define	SimpleProgramRule(name,dep) \
NormalProgramRule(name,NullArg,SourceName(name),dep,$(STDLIBS))

/*
Der Makro |$1| ge neriert eine Kompilierungsregel für ein
einfaches Kommando mit nur einem Sourcefile.
Zusätzlich wird eine Abhängigkeit für das Pseudoziel |all| und
eine Aufräumregel für das Pseudoziel |clean| generiert.
*/
#define	SimpleProgramTarget(name,dep)	\
NormalProgramTarget(name,NullArg,SourceName(name),dep,$(STDLIBS))

/*
$SeeAlso
\mref{mkmf(1)}.
*/

#endif	/* Compile.pph */
